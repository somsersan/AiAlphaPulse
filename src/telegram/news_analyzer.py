"""–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ LLM"""
import json
from typing import Dict
from ..llm.openrouter_client import OpenRouterClient


class NewsAnalyzer:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ –Ω–æ–≤–æ—Å—Ç–∏"""
    
    def __init__(self, api_key: str = None, model: str = "mistralai/mistral-7b-instruct"):
        self.llm_client = OpenRouterClient(api_key=api_key, model=model)
    
    def generate_full_analysis(self, news: Dict) -> Dict:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–∏
        
        Args:
            news: —Å–ª–æ–≤–∞—Ä—å —Å headline, content, tickers, hotness
            
        Returns:
            {
                'why_now': str,
                'draft': str,
                'trading_signal': str (—Ç–æ–ª—å–∫–æ –¥–ª—è hotness >= 0.7)
            }
        """
        
        headline = news.get('headline', '')
        content = news.get('content', '')
        tickers = news.get('tickers', [])
        hotness = news.get('hotness', 0)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≥–æ—Ä—è—á–Ω–æ—Å—Ç–∏
        if hotness >= 0.7:
            prompt = self._create_hot_news_prompt(headline, content, tickers, hotness)
        else:
            prompt = self._create_regular_news_prompt(headline, content, tickers, hotness)
        
        headers = {
            "Authorization": f"Bearer {self.llm_client.api_key}",
            "Content-Type": "application/json"
        }
        
        payload = {
            "model": self.llm_client.model,
            "messages": [{"role": "user", "content": prompt}],
            "temperature": 0.4,
            "max_tokens": 800
        }
        
        try:
            import requests
            response = requests.post(
                self.llm_client.base_url,
                headers=headers,
                json=payload,
                timeout=30
            )
            
            if response.status_code != 200:
                return self._get_fallback_analysis(hotness)
            
            result = response.json()
            content = result['choices'][0]['message']['content']
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON
            import re
            json_match = re.search(r'\{[^{}]*(?:\{[^{}]*\}[^{}]*)*\}', content, re.DOTALL)
            if json_match:
                content = json_match.group(0)
            
            analysis = json.loads(content.strip())
            return analysis
            
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞: {e}")
            return self._get_fallback_analysis(hotness)
    
    def _create_regular_news_prompt(self, headline: str, content: str, tickers: list, hotness: float) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π"""
        tickers_str = ', '.join(tickers) if tickers else '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'
        
        return f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å –∏ —Å–æ–∑–¥–∞–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫—É—é —Å–ø—Ä–∞–≤–∫—É.

–ó–ê–ì–û–õ–û–í–û–ö: {headline}
–¢–ï–ö–°–¢: {content[:1500]}
–¢–ò–ö–ï–†–´: {tickers_str}
HOTNESS: {hotness:.2f}

–ó–∞–¥–∞—á–∏:
1. why_now (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –ü–æ—á–µ–º—É —ç—Ç–∞ –Ω–æ–≤–æ—Å—Ç—å –≤–∞–∂–Ω–∞ –°–ï–ô–ß–ê–°? –£–∫–∞–∂–∏ –Ω–æ–≤–∏–∑–Ω—É, –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å, –º–∞—Å—à—Ç–∞–± –≤–ª–∏—è–Ω–∏—è.

2. draft (—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç):
   - –ó–∞–≥–æ–ª–æ–≤–æ–∫ (1 —Å—Ç—Ä–æ–∫–∞)
   - –õ–∏–¥-–∞–±–∑–∞—Ü (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –≥–ª–∞–≤–Ω–æ–π —Å—É—Ç—å—é)
   - 3 –∫–ª—é—á–µ–≤—ã—Ö –ø—É–Ω–∫—Ç–∞ (–±—É–ª–ª–µ—Ç—ã)
   - –ó–∞–∫–ª—é—á–µ–Ω–∏–µ/–∫–æ–Ω—Ç–µ–∫—Å—Ç (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)

–û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{{
    "why_now": "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏",
    "draft": "–ó–∞–≥–æ–ª–æ–≤–æ–∫\\n\\n–õ–∏–¥-–∞–±–∑–∞—Ü...\\n\\n‚Ä¢ –ü—É–Ω–∫—Ç 1\\n‚Ä¢ –ü—É–Ω–∫—Ç 2\\n‚Ä¢ –ü—É–Ω–∫—Ç 3\\n\\n–ó–∞–∫–ª—é—á–µ–Ω–∏–µ"
}}"""
    
    def _create_hot_news_prompt(self, headline: str, content: str, tickers: list, hotness: float) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–æ—Ä—è—á–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (hotness >= 0.7)"""
        tickers_str = ', '.join(tickers) if tickers else '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'
        
        return f"""üî• –ì–û–†–Ø–ß–ê–Ø –ù–û–í–û–°–¢–¨! –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ –¥–∞–π —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.

–ó–ê–ì–û–õ–û–í–û–ö: {headline}
–¢–ï–ö–°–¢: {content[:1500]}
–¢–ò–ö–ï–†–´: {tickers_str}
HOTNESS: {hotness:.2f}

–ó–∞–¥–∞—á–∏:
1. why_now (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –ü–æ—á–µ–º—É —ç—Ç–æ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –≤–∞–∂–Ω–æ —Å–µ–π—á–∞—Å? –£–∫–∞–∂–∏ —Å—Ä–æ—á–Ω–æ—Å—Ç—å –∏ –º–∞—Å—à—Ç–∞–±.

2. draft (–¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑):
   - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç–º–æ–¥–∑–∏ üî•
   - –õ–∏–¥-–∞–±–∑–∞—Ü —Å –∫–ª—é—á–µ–≤–æ–π —Å—É—Ç—å—é
   - 3 –≥–ª–∞–≤–Ω—ã—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è (–±—É–ª–ª–µ—Ç—ã)
   - –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–Ω–∫–∏

3. trading_signal (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏):
   - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (BUY/SELL/HOLD)
   - –ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ –∞–∫—Ç–∏–≤—ã
   - –í—Ä–µ–º–µ–Ω–Ω–æ–π –≥–æ—Ä–∏–∑–æ–Ω—Ç
   - –†–∏—Å–∫–∏

–û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{{
    "why_now": "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–∏",
    "draft": "üî• –ó–∞–≥–æ–ª–æ–≤–æ–∫\\n\\n–°—É—Ç—å...\\n\\n‚Ä¢ –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ 1\\n‚Ä¢ –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ 2\\n‚Ä¢ –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ 3\\n\\n–í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–Ω–∫–∏",
    "trading_signal": "üìä –°–ò–ì–ù–ê–õ: BUY/SELL/HOLD\\nüéØ –ê–∫—Ç–∏–≤—ã: ...\\n‚è∞ –ì–æ—Ä–∏–∑–æ–Ω—Ç: ...\\n‚ö†Ô∏è –†–∏—Å–∫–∏: ..."
}}"""
    
    def _get_fallback_analysis(self, hotness: float) -> Dict:
        """–ó–∞–ø–∞—Å–Ω–æ–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ LLM"""
        base = {
            'why_now': '–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
            'draft': '–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è...'
        }
        
        if hotness >= 0.7:
            base['trading_signal'] = '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑'
        
        return base

